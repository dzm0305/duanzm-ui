{"remainingRequest":"/Users/duanzhimin/Java/MyWorkspaces/duanzm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/duanzhimin/Java/MyWorkspaces/duanzm-ui/src/views/monitor/job/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/duanzhimin/Java/MyWorkspaces/duanzm-ui/src/views/monitor/job/index.vue","mtime":1632740083000},{"path":"/Users/duanzhimin/Java/MyWorkspaces/duanzm-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/duanzhimin/Java/MyWorkspaces/duanzm-ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/duanzhimin/Java/MyWorkspaces/duanzm-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/duanzhimin/Java/MyWorkspaces/duanzm-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"index.vue","sourceRoot":"src/views/monitor/job","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" v-show=\"showSearch\" label-width=\"68px\">\n      <el-form-item label=\"任务名称\" prop=\"jobName\">\n        <el-input\n          v-model=\"queryParams.jobName\"\n          placeholder=\"请输入任务名称\"\n          clearable\n          size=\"small\"\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <el-form-item label=\"任务组名\" prop=\"jobGroup\">\n        <el-select v-model=\"queryParams.jobGroup\" placeholder=\"请选择任务组名\" clearable size=\"small\">\n          <el-option\n            v-for=\"dict in dict.type.sys_job_group\"\n            :key=\"dict.value\"\n            :label=\"dict.label\"\n            :value=\"dict.value\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"任务状态\" prop=\"status\">\n        <el-select v-model=\"queryParams.status\" placeholder=\"请选择任务状态\" clearable size=\"small\">\n          <el-option\n            v-for=\"dict in dict.type.sys_job_status\"\n            :key=\"dict.value\"\n            :label=\"dict.label\"\n            :value=\"dict.value\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n        <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n      </el-form-item>\n    </el-form>\n\n    <el-row :gutter=\"10\" class=\"mb8\">\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"primary\"\n          plain\n          icon=\"el-icon-plus\"\n          size=\"mini\"\n          @click=\"handleAdd\"\n          v-hasPermi=\"['monitor:job:add']\"\n        >新增</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"success\"\n          plain\n          icon=\"el-icon-edit\"\n          size=\"mini\"\n          :disabled=\"single\"\n          @click=\"handleUpdate\"\n          v-hasPermi=\"['monitor:job:edit']\"\n        >修改</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"danger\"\n          plain\n          icon=\"el-icon-delete\"\n          size=\"mini\"\n          :disabled=\"multiple\"\n          @click=\"handleDelete\"\n          v-hasPermi=\"['monitor:job:remove']\"\n        >删除</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"warning\"\n          plain\n          icon=\"el-icon-download\"\n          size=\"mini\"\n          :loading=\"exportLoading\"\n          @click=\"handleExport\"\n          v-hasPermi=\"['monitor:job:export']\"\n        >导出</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"info\"\n          plain\n          icon=\"el-icon-s-operation\"\n          size=\"mini\"\n          @click=\"handleJobLog\"\n          v-hasPermi=\"['monitor:job:query']\"\n        >日志</el-button>\n      </el-col>\n      <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\n    </el-row>\n\n    <el-table v-loading=\"loading\" :data=\"jobList\" @selection-change=\"handleSelectionChange\">\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n      <el-table-column label=\"任务编号\" width=\"100\" align=\"center\" prop=\"jobId\" />\n      <el-table-column label=\"任务名称\" align=\"center\" prop=\"jobName\" :show-overflow-tooltip=\"true\" />\n      <el-table-column label=\"任务组名\" align=\"center\" prop=\"jobGroup\">\n        <template slot-scope=\"scope\">\n          <dict-tag :options=\"dict.type.sys_job_group\" :value=\"scope.row.jobGroup\"/>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"调用目标字符串\" align=\"center\" prop=\"invokeTarget\" :show-overflow-tooltip=\"true\" />\n      <el-table-column label=\"cron执行表达式\" align=\"center\" prop=\"cronExpression\" :show-overflow-tooltip=\"true\" />\n      <el-table-column label=\"状态\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-switch\n            v-model=\"scope.row.status\"\n            active-value=\"0\"\n            inactive-value=\"1\"\n            @change=\"handleStatusChange(scope.row)\"\n          ></el-switch>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"scope\">\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-edit\"\n            @click=\"handleUpdate(scope.row)\"\n            v-hasPermi=\"['monitor:job:edit']\"\n          >修改</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-delete\"\n            @click=\"handleDelete(scope.row)\"\n            v-hasPermi=\"['monitor:job:remove']\"\n          >删除</el-button>\n          <el-dropdown size=\"mini\" @command=\"(command) => handleCommand(command, scope.row)\" v-hasPermi=\"['monitor:job:changeStatus', 'monitor:job:query']\">\n            <span class=\"el-dropdown-link\">\n              <i class=\"el-icon-d-arrow-right el-icon--right\"></i>更多\n            </span>\n            <el-dropdown-menu slot=\"dropdown\">\n              <el-dropdown-item command=\"handleRun\" icon=\"el-icon-caret-right\"\n                v-hasPermi=\"['monitor:job:changeStatus']\">执行一次</el-dropdown-item>\n              <el-dropdown-item command=\"handleView\" icon=\"el-icon-view\"\n                v-hasPermi=\"['monitor:job:query']\">任务详细</el-dropdown-item>\n              <el-dropdown-item command=\"handleJobLog\" icon=\"el-icon-s-operation\"\n                v-hasPermi=\"['monitor:job:query']\">调度日志</el-dropdown-item>\n            </el-dropdown-menu>\n          </el-dropdown>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination\n      v-show=\"total>0\"\n      :total=\"total\"\n      :page.sync=\"queryParams.pageNum\"\n      :limit.sync=\"queryParams.pageSize\"\n      @pagination=\"getList\"\n    />\n\n    <!-- 添加或修改定时任务对话框 -->\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"800px\" append-to-body>\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"120px\">\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"任务名称\" prop=\"jobName\">\n              <el-input v-model=\"form.jobName\" placeholder=\"请输入任务名称\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"任务分组\" prop=\"jobGroup\">\n              <el-select v-model=\"form.jobGroup\" placeholder=\"请选择\">\n                <el-option\n                  v-for=\"dict in dict.type.sys_job_group\"\n                  :key=\"dict.value\"\n                  :label=\"dict.label\"\n                  :value=\"dict.value\"\n                ></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item prop=\"invokeTarget\">\n              <span slot=\"label\">\n                调用方法\n                <el-tooltip placement=\"top\">\n                  <div slot=\"content\">\n                    Bean调用示例：ryTask.ryParams('ry')\n                    <br />Class类调用示例：com.ruoyi.quartz.task.RyTask.ryParams('ry')\n                    <br />参数说明：支持字符串，布尔类型，长整型，浮点型，整型\n                  </div>\n                  <i class=\"el-icon-question\"></i>\n                </el-tooltip>\n              </span>\n              <el-input v-model=\"form.invokeTarget\" placeholder=\"请输入调用目标字符串\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"cron表达式\" prop=\"cronExpression\">\n              <el-input v-model=\"form.cronExpression\" placeholder=\"请输入cron执行表达式\">\n                <template slot=\"append\">\n                  <el-button type=\"primary\" @click=\"handleShowCron\">\n                    生成表达式\n                    <i class=\"el-icon-time el-icon--right\"></i>\n                  </el-button>\n                </template>\n              </el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"错误策略\" prop=\"misfirePolicy\">\n              <el-radio-group v-model=\"form.misfirePolicy\" size=\"small\">\n                <el-radio-button label=\"1\">立即执行</el-radio-button>\n                <el-radio-button label=\"2\">执行一次</el-radio-button>\n                <el-radio-button label=\"3\">放弃执行</el-radio-button>\n              </el-radio-group>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"是否并发\" prop=\"concurrent\">\n              <el-radio-group v-model=\"form.concurrent\" size=\"small\">\n                <el-radio-button label=\"0\">允许</el-radio-button>\n                <el-radio-button label=\"1\">禁止</el-radio-button>\n              </el-radio-group>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"状态\">\n              <el-radio-group v-model=\"form.status\">\n                <el-radio\n                  v-for=\"dict in dict.type.sys_job_status\"\n                  :key=\"dict.value\"\n                  :label=\"dict.value\"\n                >{{dict.label}}</el-radio>\n              </el-radio-group>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"Cron表达式生成器\" :visible.sync=\"openCron\" append-to-body destroy-on-close class=\"scrollbar\">\n      <crontab @hide=\"openCron=false\" @fill=\"crontabFill\" :expression=\"expression\"></crontab>\n    </el-dialog>\n\n    <!-- 任务日志详细 -->\n    <el-dialog title=\"任务详细\" :visible.sync=\"openView\" width=\"700px\" append-to-body>\n      <el-form ref=\"form\" :model=\"form\" label-width=\"120px\" size=\"mini\">\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"任务编号：\">{{ form.jobId }}</el-form-item>\n            <el-form-item label=\"任务名称：\">{{ form.jobName }}</el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"任务分组：\">{{ jobGroupFormat(form) }}</el-form-item>\n            <el-form-item label=\"创建时间：\">{{ form.createTime }}</el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"cron表达式：\">{{ form.cronExpression }}</el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"下次执行时间：\">{{ parseTime(form.nextValidTime) }}</el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"调用目标方法：\">{{ form.invokeTarget }}</el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"任务状态：\">\n              <div v-if=\"form.status == 0\">正常</div>\n              <div v-else-if=\"form.status == 1\">失败</div>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"是否并发：\">\n              <div v-if=\"form.concurrent == 0\">允许</div>\n              <div v-else-if=\"form.concurrent == 1\">禁止</div>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"执行策略：\">\n              <div v-if=\"form.misfirePolicy == 0\">默认策略</div>\n              <div v-else-if=\"form.misfirePolicy == 1\">立即执行</div>\n              <div v-else-if=\"form.misfirePolicy == 2\">执行一次</div>\n              <div v-else-if=\"form.misfirePolicy == 3\">放弃执行</div>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"openView = false\">关 闭</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { listJob, getJob, delJob, addJob, updateJob, exportJob, runJob, changeJobStatus } from \"@/api/monitor/job\";\nimport Crontab from '@/components/Crontab'\n\nexport default {\n  components: { Crontab },\n  name: \"Job\",\n  dicts: ['sys_job_group', 'sys_job_status'],\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 导出遮罩层\n      exportLoading: false,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 定时任务表格数据\n      jobList: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      // 是否显示详细弹出层\n      openView: false,\n      // 是否显示Cron表达式弹出层\n      openCron: false,\n      // 传入的表达式\n      expression: \"\",\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 10,\n        jobName: undefined,\n        jobGroup: undefined,\n        status: undefined\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        jobName: [\n          { required: true, message: \"任务名称不能为空\", trigger: \"blur\" }\n        ],\n        invokeTarget: [\n          { required: true, message: \"调用目标字符串不能为空\", trigger: \"blur\" }\n        ],\n        cronExpression: [\n          { required: true, message: \"cron执行表达式不能为空\", trigger: \"blur\" }\n        ]\n      }\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    /** 查询定时任务列表 */\n    getList() {\n      this.loading = true;\n      listJob(this.queryParams).then(response => {\n        this.jobList = response.rows;\n        this.total = response.total;\n        this.loading = false;\n      });\n    },\n    // 任务组名字典翻译\n    jobGroupFormat(row, column) {\n      return this.selectDictLabel(this.dict.type.sys_job_group, row.jobGroup);\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        jobId: undefined,\n        jobName: undefined,\n        jobGroup: undefined,\n        invokeTarget: undefined,\n        cronExpression: undefined,\n        misfirePolicy: 1,\n        concurrent: 1,\n        status: \"0\"\n      };\n      this.resetForm(\"form\");\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.resetForm(\"queryForm\");\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.jobId);\n      this.single = selection.length != 1;\n      this.multiple = !selection.length;\n    },\n    // 更多操作触发\n    handleCommand(command, row) {\n      switch (command) {\n        case \"handleRun\":\n          this.handleRun(row);\n          break;\n        case \"handleView\":\n          this.handleView(row);\n          break;\n        case \"handleJobLog\":\n          this.handleJobLog(row);\n          break;\n        default:\n          break;\n      }\n    },\n    // 任务状态修改\n    handleStatusChange(row) {\n      let text = row.status === \"0\" ? \"启用\" : \"停用\";\n      this.$modal.confirm('确认要\"' + text + '\"\"' + row.jobName + '\"任务吗？').then(function() {\n        return changeJobStatus(row.jobId, row.status);\n      }).then(() => {\n        this.$modal.msgSuccess(text + \"成功\");\n      }).catch(function() {\n        row.status = row.status === \"0\" ? \"1\" : \"0\";\n      });\n    },\n    /* 立即执行一次 */\n    handleRun(row) {\n      this.$modal.confirm('确认要立即执行一次\"' + row.jobName + '\"任务吗？').then(function() {\n        return runJob(row.jobId, row.jobGroup);\n      }).then(() => {\n        this.$modal.msgSuccess(\"执行成功\");\n      }).catch(() => {});\n    },\n    /** 任务详细信息 */\n    handleView(row) {\n      getJob(row.jobId).then(response => {\n        this.form = response.data;\n        this.openView = true;\n      });\n    },\n    /** cron表达式按钮操作 */\n    handleShowCron() {\n      this.expression = this.form.cronExpression;\n      this.openCron = true;\n    },\n    /** 确定后回传值 */\n    crontabFill(value) {\n      this.form.cronExpression = value;\n    },\n    /** 任务日志列表查询 */\n    handleJobLog(row) {\n      const jobId = row.jobId || 0;\n      this.$router.push({ path: '/monitor/job-log/index', query: { jobId: jobId } })\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset();\n      this.open = true;\n      this.title = \"添加任务\";\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset();\n      const jobId = row.jobId || this.ids;\n      getJob(jobId).then(response => {\n        this.form = response.data;\n        this.open = true;\n        this.title = \"修改任务\";\n      });\n    },\n    /** 提交按钮 */\n    submitForm: function() {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          if (this.form.jobId != undefined) {\n            updateJob(this.form).then(response => {\n              this.$modal.msgSuccess(\"修改成功\");\n              this.open = false;\n              this.getList();\n            });\n          } else {\n            addJob(this.form).then(response => {\n              this.$modal.msgSuccess(\"新增成功\");\n              this.open = false;\n              this.getList();\n            });\n          }\n        }\n      });\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const jobIds = row.jobId || this.ids;\n      this.$modal.confirm('是否确认删除定时任务编号为\"' + jobIds + '\"的数据项？').then(function() {\n        return delJob(jobIds);\n      }).then(() => {\n        this.getList();\n        this.$modal.msgSuccess(\"删除成功\");\n      }).catch(() => {});\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      const queryParams = this.queryParams;\n      this.$modal.confirm('是否确认导出所有定时任务数据项？').then(() => {\n        this.exportLoading = true;\n        return exportJob(queryParams);\n      }).then(response => {\n        this.$download.name(response.msg);\n        this.exportLoading = false;\n      }).catch(() => {});\n    }\n  }\n};\n</script>\n"]}]}